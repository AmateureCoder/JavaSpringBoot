import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class OfflinePasswordHasher {
    private static final String SQL_FILE_PATH = "admin-credentials.sql";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter admin email: ");
        String email = scanner.nextLine();

        System.out.print("Enter plain password: ");
        String rawPassword = scanner.nextLine();

        BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
        String hashed = encoder.encode(rawPassword);

        String sql = String.format(
                "INSERT INTO users (username, email, password, role)%n" +
                        "VALUES ('admin', '%s', '%s', 'ROLE_ADMIN');%n",
                email, hashed
        );

        File sqlFile = new File(SQL_FILE_PATH);
        boolean isNewFile = !sqlFile.exists();

        try (FileWriter writer = new FileWriter(sqlFile, true)) {
            if (isNewFile) {
                writer.write("-- Admin credential insertions generated by OfflinePasswordHasher\n\n");
            }
            writer.write(sql);
            System.out.println("\n✅ SQL appended to: " + SQL_FILE_PATH);
        } catch (IOException e) {
            System.err.println("❌ Failed to write to file: " + e.getMessage());
        }

        System.out.println("\nGenerated SQL:");
        System.out.println(sql);
    }
}
/*
javac -cp ".;spring-security-core-6.4.4.jar;spring-security-crypto-6.4.4.jar;commons-logging-1.3.5.jar" OfflinePasswordHasher.java
java -cp ".;spring-security-core-6.4.4.jar;spring-security-crypto-6.4.4.jar;commons-logging-1.3.5.jar" OfflinePasswordHasher
*/
